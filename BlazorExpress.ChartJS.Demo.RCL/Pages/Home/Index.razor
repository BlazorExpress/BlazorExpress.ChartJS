@attribute [Route(pageUrl)]
@attribute [Route(pageUrl2)]

<PageTitle>@title | BlazorExpress.ChartJS Components</PageTitle>

<PageMetaTags PageUrl="@pageUrl" Title="@title" Description="@description" ImageUrl="@imageUrl" />

<h1>Blazor Charts</h1>
<div class="lead mb-3">
    Blazor Express charts are well-designed chart components on top of <b>Chart.js</b> to visualize data. It contains a rich UI gallery of charts that cater to all charting scenarios. Its high performance helps render large amounts of data quickly.
</div>

@* <CarbonAds /> *@

<Section Size="HeadingSize.H4" Text="Chart Types" PageUrl="@pageUrl" HashTagName="chart-types" />
<div class="mb-2">At this moment we are supporting four blazor chart types.</div>
<ol>
    <li><a href="/charts/bar-chart">Bar Chart</a></li>
    <li><a href="/charts/doughnut-chart">Doughnut Chart</a></li>
    <li><a href="/charts/line-chart">Line Chart</a></li>
    <li><a href="/charts/pie-chart">Pie Chart</a></li>
    <li><a href="/charts/polar-area-chart">Polar Area Chart</a></li>
</ol>

<BlazorBootstrap.Callout Color="BlazorBootstrap.CalloutColor.Info">
    We will add Bubble Chart, Radar Chart, Scatter Chart, and Mixed Chart support in the subsequent versions.
</BlazorBootstrap.Callout>

<Section Size="HeadingSize.H4" Text="Charts Setup" PageUrl="@pageUrl" HashTagName="charts-setup" />
<div class="mb-3">
    Refer to the <a href="/charts/getting-started">getting started guide</a> for setting up charts.
</div>

@code {
    private const string pageUrl = "/";
    private const string pageUrl2 = "/charts/overview";
    private const string title = "Blazor Chart Components";
    private const string heading = "Blazor Charts";
    private const string description = "Blazor Express charts are well-designed chart components on top of Chart.js to visualize data. It contains a rich UI gallery of charts that cater to all charting scenarios. Its high performance helps render large amounts of data quickly.";
    private const string imageUrl = "https://i.imgur.com/C5ObC3A.png";

    [Inject] private NavigationManager _navigationManager { get; set; } = default!;

    protected override void OnInitialized()
    {
        try
        {
            if (_navigationManager.Uri.Replace(_navigationManager.BaseUri, "").Equals(""))
                _navigationManager.NavigateTo(pageUrl2);
        }
        catch
        {
            // do nothing
        }
    }
}
